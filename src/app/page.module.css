.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 80px 5vw;
  min-height: 100vh;
}

.title{
  font-size: var(--fontH1);
}


.description {
  display: inherit;
  justify-content: inherit;
  align-items: inherit;
  font-size: 0.85rem;
  max-width: var(--max-width);
  width: 100%;
  z-index: 2;
  font-family: var(--font-mono);
}

.description a {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

.description p {
  position: relative;
  margin: 0;
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.5);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  border-radius: var(--border-radius);
}

.code {
  font-weight: 700;
  font-family: var(--font-mono);
}

.grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(25%, auto));
  max-width: 100%;
  width: var(--max-width);
}

.card {
  padding: 1rem 0;
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  border: 1px solid rgba(var(--card-border-rgb), 0);
  transition: background 200ms, border 200ms;
}

.card span {
  display: inline-block;
  transition: transform 200ms;
}

.card h2 {
  font-size: var(--fontH2);
}

.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

.darkButton {
  display: flex;
  justify-content: center;
  width: fit-content;
  align-items: center;
  padding: 0.4rem 0.6rem;
  margin: 1rem 0;
  font-family: var(--font-mono);
  font-weight: 600;
  font-size: 1rem;
  background-color: rgba(var(--card-rgb), 0.2); /* Adjusted opacity to be slightly more prominent for button */
  border: 1px solid rgba(var(--card-border-rgb), 0.5);
  border-radius: var(--border-radius);
  transition: background 200ms, border 200ms, transform 150ms;
  cursor: pointer;
  color: #FFF; /* Assuming white font color for dark theme, adjust as needed */
  text-decoration: none; /* Useful if the button is an anchor link */
}
.darkButton {
  display: flex;
  justify-content: center;
  width: fit-content;
  align-items: center;
  padding: 0.4rem 0.6rem;
  margin: 1rem 0;
  font-family: var(--font-mono);
  font-weight: 600;
  font-size: 1rem;
  background-color: rgba(var(--card-rgb), 0.2); /* Adjusted opacity to be slightly more prominent for button */
  border: 1px solid rgba(var(--card-border-rgb), 0.5);
  border-radius: var(--border-radius);
  transition: background 200ms, border 200ms, transform 150ms;
  cursor: pointer;
  color: #FFF; /* Assuming white font color for dark theme, adjust as needed */
  text-decoration: none; /* Useful if the button is an anchor link */
}

/* Input file styling */
.darkButtonFile {
  display: none;
  padding: 0.4rem 0.6rem;
  margin: 1rem 0;
  font-family: var(--font-mono);
  font-weight: 600;
  font-size: 1rem;
  background-color: rgba(var(--card-rgb), 0.2); /* Adjusted opacity to be slightly more prominent for button */
  border: 1px solid rgba(var(--card-border-rgb), 0.5);
  border-radius: var(--border-radius);
  transition: background 200ms, border 200ms, transform 150ms;
  cursor: pointer;
  color: #FFF; /* Assuming white font color for dark theme, adjust as needed */
  text-decoration: none; /* Useful if the button is an anchor link */
}

/* Button hover styling for non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .darkButton:hover {
    background-color: rgba(var(--card-rgb), 0.5); /* Slightly adjusted for a hover effect */
    border: 1px solid rgba(var(--card-border-rgb), 0.7);
    transform: translateY(-2px); /* Small lift effect on hover */
  }
}

/* Button active state */
.darkButton:active {
  transform: translateY(0); /* Reset translateY on active press */
  background-color: rgba(var(--card-rgb), 1); /* Full opacity on active press */
}


.darkInput {
  display: flex;
  justify-content: center;
  width: 300px;
  padding: 0.4rem 0.6rem;
  margin: 1rem 0;
  font-family: var(--font-mono);
  font-weight: 600;
  font-size: 1rem;
  background-color: rgba(var(--card-rgb), 0.3); /* A bit lighter to distinguish from the button */
  border: 1px solid rgba(var(--card-border-rgb), 0.5);
  border-radius: var(--border-radius);
  transition: background 200ms, border 200ms;
  color: #FFF; /* White font color for dark theme, adjust as needed */
  
  /* Text input specific styles */
  outline: none; /* Remove default browser outline */
}

.darkInput:focus {
  border-color: rgba(var(--card-border-rgb), 0.7); /* Increase contrast on focus */
  background-color: rgba(var(--card-rgb), 0.4); /* Slightly increase opacity on focus */
}

